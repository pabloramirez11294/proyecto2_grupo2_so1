// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config/config.proto

package config

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type DataRequest struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataRequest) Reset()         { *m = DataRequest{} }
func (m *DataRequest) String() string { return proto.CompactTextString(m) }
func (*DataRequest) ProtoMessage()    {}
func (*DataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc332a44e926b360, []int{0}
}

func (m *DataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataRequest.Unmarshal(m, b)
}
func (m *DataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataRequest.Marshal(b, m, deterministic)
}
func (m *DataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRequest.Merge(m, src)
}
func (m *DataRequest) XXX_Size() int {
	return xxx_messageInfo_DataRequest.Size(m)
}
func (m *DataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataRequest proto.InternalMessageInfo

func (m *DataRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// The response message containing the greetings
type DataReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataReply) Reset()         { *m = DataReply{} }
func (m *DataReply) String() string { return proto.CompactTextString(m) }
func (*DataReply) ProtoMessage()    {}
func (*DataReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc332a44e926b360, []int{1}
}

func (m *DataReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataReply.Unmarshal(m, b)
}
func (m *DataReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataReply.Marshal(b, m, deterministic)
}
func (m *DataReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataReply.Merge(m, src)
}
func (m *DataReply) XXX_Size() int {
	return xxx_messageInfo_DataReply.Size(m)
}
func (m *DataReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DataReply.DiscardUnknown(m)
}

var xxx_messageInfo_DataReply proto.InternalMessageInfo

func (m *DataReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*DataRequest)(nil), "config.DataRequest")
	proto.RegisterType((*DataReply)(nil), "config.DataReply")
}

func init() {
	proto.RegisterFile("config/config.proto", fileDescriptor_cc332a44e926b360)
}

var fileDescriptor_cc332a44e926b360 = []byte{
	// 139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0xce, 0xcf, 0x4b,
	0xcb, 0x4c, 0xd7, 0x87, 0x50, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x6c, 0x10, 0x9e, 0x92,
	0x22, 0x17, 0xb7, 0x4b, 0x62, 0x49, 0x62, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x10,
	0x17, 0x4b, 0x0a, 0x90, 0x2b, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0x66, 0x2b, 0xa9, 0x72,
	0x71, 0x42, 0x94, 0x14, 0xe4, 0x54, 0x0a, 0x49, 0x70, 0xb1, 0xe7, 0xa6, 0x16, 0x17, 0x27, 0xa6,
	0xa7, 0x42, 0xd5, 0xc0, 0xb8, 0x46, 0x0e, 0x5c, 0x1c, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0x99,
	0xf9, 0x42, 0x26, 0x20, 0x76, 0x5e, 0x0a, 0x48, 0x9b, 0x90, 0xb0, 0x1e, 0xd4, 0x62, 0x24, 0x7b,
	0xa4, 0x04, 0x51, 0x05, 0x81, 0x26, 0x2b, 0x31, 0x24, 0xb1, 0x81, 0x9d, 0x66, 0x0c, 0x08, 0x00,
	0x00, 0xff, 0xff, 0x37, 0x49, 0x39, 0xdd, 0xb1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ServicioClient is the client API for Servicio service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServicioClient interface {
	// Sends a greeting
	SendData(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*DataReply, error)
}

type servicioClient struct {
	cc grpc.ClientConnInterface
}

func NewServicioClient(cc grpc.ClientConnInterface) ServicioClient {
	return &servicioClient{cc}
}

func (c *servicioClient) SendData(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*DataReply, error) {
	out := new(DataReply)
	err := c.cc.Invoke(ctx, "/config.Servicio/SendData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServicioServer is the server API for Servicio service.
type ServicioServer interface {
	// Sends a greeting
	SendData(context.Context, *DataRequest) (*DataReply, error)
}

// UnimplementedServicioServer can be embedded to have forward compatible implementations.
type UnimplementedServicioServer struct {
}

func (*UnimplementedServicioServer) SendData(ctx context.Context, req *DataRequest) (*DataReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendData not implemented")
}

func RegisterServicioServer(s *grpc.Server, srv ServicioServer) {
	s.RegisterService(&_Servicio_serviceDesc, srv)
}

func _Servicio_SendData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicioServer).SendData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Servicio/SendData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicioServer).SendData(ctx, req.(*DataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Servicio_serviceDesc = grpc.ServiceDesc{
	ServiceName: "config.Servicio",
	HandlerType: (*ServicioServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendData",
			Handler:    _Servicio_SendData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config/config.proto",
}
